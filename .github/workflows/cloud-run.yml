name: Build for Sonar & Deploy to Cloud Run

env:
  SERVICE_NAME: echoboard-fe
  REGION: us-central1

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python Dependencies
        run: pip install requests

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      - name: Run Python Sonar Issue Checker
        env:
          PROJECT_KEY: ${{ secrets.PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: python check_sonar_issues.py

      - name: Fail Workflow If Quality Gate Fails
        if: failure()
        run: exit 1

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image to Docker Hub
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/echoboard-fe:${{ github.sha }} .
          docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/echoboard-fe:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/echoboard-fe:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 3000 \
            --memory 512Mi \
            --cpu 1 \
            --set-env-vars AUTH_SECRET=${{ secrets.AUTH_SECRET }},AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }},AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }} \
            --min-instances 0 \
            --max-instances 5
