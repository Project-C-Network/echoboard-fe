name: Deploy to Cloud Run

env:
  SERVICE_NAME: echoboard-fe # Name of the service
  REGION: us-central1 # Deployment region

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Check if Billing is Enabled
        run: |
          BILLING_STATUS=$(gcloud beta billing projects describe ${{ secrets.GCP_PROJECT_ID }} --format="value(billingEnabled)")
          if [[ "$BILLING_STATUS" != "True" ]]; then
            echo "Error: Billing is not enabled for project ${{ secrets.GCP_PROJECT_ID }}."
            exit 1
          fi

      - name: Enable Required APIs
        run: |
          gcloud services enable artifactregistry.googleapis.com \
          cloudbuild.googleapis.com \
          run.googleapis.com \
          containerregistry.googleapis.com

      - name: Grant IAM Permissions
        run: |
          gcloud projects add-iam-policy-binding ${{ secrets.GCP_PROJECT_ID }} \
            --member="serviceAccount:${{ secrets.GCP_SA_KEY }}" \
            --role="roles/artifactregistry.writer"

      - name: Configure gcloud CLI
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ secrets.DOCKER_IMAGE_NAME }}:latest .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ secrets.DOCKER_IMAGE_NAME }}:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 3000
