name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure complete history for better analysis

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: "Wait for SonarQube Analysis (Polling)"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Waiting for SonarQube to complete analysis..."
          
          STATUS="PENDING"
          WAIT_TIME=5  # Start with 5 seconds wait

          while [ "$STATUS" = "PENDING" ]; do
            sleep $WAIT_TIME  # Wait before checking again

            STATUS=$(curl -s -u $SONAR_TOKEN: \
              "$SONAR_HOST_URL/api/ce/task?componentKey=my-project" \
              | jq -r '.task.status')

            echo "Current SonarQube Analysis Status: $STATUS"

            # Gradually increase wait time (max 30s)
            if [ "$WAIT_TIME" -lt 30 ]; then
              WAIT_TIME=$((WAIT_TIME + 5))
            fi
          done

          if [ "$STATUS" != "SUCCESS" ]; then
            echo "❌ SonarQube analysis failed! Stopping workflow."
            exit 1
          fi

          echo "✅ SonarQube analysis completed successfully."

      - name: "Check for Vulnerabilities"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Checking for vulnerabilities in SonarQube..."
          
          # Fetch the number of vulnerabilities
          VULNERABILITIES=$(curl -s -u $SONAR_TOKEN: \
            "$SONAR_HOST_URL/api/issues/search?componentKeys=my-project&types=VULNERABILITY&resolved=false" \
            | jq -r '.total')

          echo "Detected Vulnerabilities: $VULNERABILITIES"

          # Fail if any vulnerabilities are found
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "❌ SonarCloud detected vulnerabilities! Failing the workflow."
            exit 1
          fi

          echo "✅ No vulnerabilities found. Proceeding with workflow."
